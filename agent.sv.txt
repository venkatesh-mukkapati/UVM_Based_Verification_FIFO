class agent extends uvm_agent;
 `uvm_component_utils(agent)
 packet p;
 my_driver div;
 my_sequencer seqr;
 monitor mon;

 function new(input string name = "agent", uvm_component p);
 super.new(name,p);
 $display("_-_ agent class new function _-_");
 endfunction
 virtual function void build_phase(uvm_phase phase);
 super.build_phase(phase);
 `uvm_info(" [AGENT] ","BUid Phase of Agent",UVM_LOW)
 div = my_driver::type_id::create("div",this);
 seqr = my_sequencer::type_id::create("seqr",div);
 mon = monitor::type_id::create("mon",this);

 endfunction
 virtual function void connect_phase(uvm_phase phase);
 super.connect_phase(phase);
 `uvm_info(" [AGENT] ","connect phase of agent",UVM_LOW)
 div.seq_item_port.connect(seqr.seq_item_export);
 endfunction

 virtual task run_phase(uvm_phase phase);
 super.run_phase(phase);
 `uvm_info(" [AGENT] ","Run phase of agent",UVM_LOW)
 endtask
 endclass